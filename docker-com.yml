version: '2'
services:
  phantomjs:
    image: 'hanxianzhai/pyspider:latest'
    command: phantomjs
    cpu_shares: 256
    environment:
      - 'EXCLUDE_PORTS=5000,23333,24444'
    expose:
      - '25555' # 暴露端口25555给link到此service的容器
    mem_limit: 256m
    restart: always

  phantomjs-lb:
    image: 'dockercloud/haproxy:latest' # 使用haproxy使用负载均衡
    links:
      - phantomjs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # docker-compose v2版本中haproxy需要指定docker socket(MAC系统中)
    restart: always

  fetcher:
    image: 'hanxianzhai/pyspider:latest'
    command: '--message-queue "redis://172.18.0.2:6379/0" --phantomjs-proxy "phantomjs:80" fetcher --xmlrpc' # fetcher以rpc的方式启动
    cpu_shares: 256
    environment:
      - 'EXCLUDE_PORTS=5000,25555,23333'
    links:
      - 'phantomjs-lb:phantomjs'
    mem_limit: 256m
    restart: always

  fetcher-lb:
    image: 'dockercloud/haproxy:latest' # 使用haproxy使用负载均衡
    links:
      - fetcher
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # docker-compose v2版本中haproxy需要指定docker socket(MAC系统中)
    restart: always
    
  processor:
    image: 'hanxianzhai/pyspider:latest'
    command: '--projectdb "mysql+projectdb://root:hanxianzhai@172.18.0.3:3306/projectdb" --message-queue "redis://172.18.0.2:6379/0" processor'
    cpu_shares: 256
    mem_limit: 256m
    restart: always
 
  result-worker:
    image: 'hanxianzhai/pyspider:latest'
    command: '--taskdb "mysql+taskdb://root:hanxianzhai@172.18.0.3:3306/taskdb"  --projectdb "mysql+projectdb://root:hanxianzhai@172.18.0.3:3306/projectdb" --resultdb "mysql+resultdb://root:hanxianzhai@172.18.0.3:3306/resultdb" --message-queue "redis://172.18.0.2:6379/0" result_worker'
    cpu_shares: 256
    mem_limit: 256m
    restart: always
    
  webui:
    image: 'hanxianzhai/pyspider:latest'
    command: '--taskdb "mysql+taskdb://root:hanxianzhai@172.18.0.3:3306/taskdb"  --projectdb "mysql+projectdb://root:hanxianzhai@172.18.0.3:3306/projectdb" --resultdb "mysql+resultdb://root:hanxianzhai@172.18.0.3:3306/resultdb" --message-queue "redis://172.18.0.2:6379/0" webui --max-rate 0.3 --max-burst 3 --scheduler-rpc "http://172.18.0.4:23333/" --fetcher-rpc "http://fetcher/"'
    cpu_shares: 256
    environment:
      - 'EXCLUDE_PORTS=24444,25555,23333'
    ports:
      - '5000:5000' # webui的对外的端口为5000，可以通过http://localhost:5000访问webui服务。
    links:
      - 'fetcher-lb:fetcher' # link到其它负载均衡haproxy的服务。
    mem_limit: 256m
    restart: always

networks:
  default:
    external:
      name: pyspider #指定docker-compose的网络接口为：pyspider；实现和docker run方式创建容器的互通。


docker network create --subnet=172.18.0.0/16 --driver bridge pyspider
docker run --net pyspider --ip 172.18.0.2 --name redis -d -p 6379:6379 redis


docker run --network=pyspider --ip 172.18.0.3 -p 3306:3306 --name mysql -v /opt/mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=hanxianzhai -d mysql:5.7





docker run --network=pyspider --ip 172.18.0.4 --name scheduler -d -p 23333:23333 --restart=always hanxianzhai/pyspider --taskdb "mysql+taskdb://root:hanxianzhai@172.18.0.3:3306/taskdb" --resultdb "mysql+projectdb://root:hanxianzhai@172.18.0.3:3306/resultdb" --projectdb "mysql+projectdb://root:hanxianzhai@172.18.0.3:3306/projectdb" --message-queue "redis://172.18.0.2:6379/0" scheduler --inqueue-limit 10000 --delete-time 3600